{"version":3,"sources":["Task.js","Tasks.js","AddTask.js","App.js","index.js"],"names":["Task","props","id","type","className","checked","completed","onChange","e","onTaskFieldChange","target","value","text","onClick","onDeleteTask","Tasks","list","map","elem","title","AddTask","useState","setText","generateUniqueID","placeholder","task","onAddTask","initialData","App","data","setData","showCompleted","setShowCompleted","filteredList","filter","concat","field","newVal","deletedId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAeeA,MAZf,SAAcC,GAEV,OAAO,8BACH,sBAAKC,GAAG,OAAR,UACI,uBAAOC,KAAK,WAAWC,UAAU,QAAQC,QAASJ,EAAMK,UAAWC,SAAU,SAAAC,GAAC,OAAIP,EAAMQ,kBAAkBR,EAAMC,GAAI,YAAYM,EAAEE,OAAOL,YACzI,uBAAOF,KAAK,OAAOQ,MAAOV,EAAMW,KAAMR,UAAW,UAAWG,SAAU,SAAAC,GAAC,OAAIP,EAAMQ,kBAAkBR,EAAMC,GAAI,QAAQM,EAAEE,OAAOC,UAC9H,wBAAQP,UAAW,eAAgBS,QAAS,SAAAL,GAAC,OAAIP,EAAMa,aAAab,EAAMC,KAA1E,wBAJSD,EAAMC,K,MCYZa,MAbf,SAAed,GACX,OAAQ,qBAAKG,UAAW,QAAhB,SACHH,EAAMe,KAAKC,KAAI,SAAAC,GAAI,OAAI,8BACI,cAAC,EAAD,aACIhB,GAAMgB,EAAKhB,GACXO,kBAAmBR,EAAMQ,kBACzBL,UAAU,OACVU,aAAcb,EAAMa,aACtBF,KAAMM,EAAKC,OAAWD,Y,aCM7CE,MAdf,SAAiBnB,GACb,MAAwBoB,mBAAS,IAAjC,mBAAOT,EAAP,KAAaU,EAAb,KAOA,OAAO,sBAAKlB,UAAW,UAAhB,UACC,uBAAOA,UAAU,gBAAgBD,KAAK,OAAOD,GAAKqB,cAAoBZ,MAAOC,EAAML,SAAU,SAAAC,GAAC,OAAIc,EAAQd,EAAEE,OAAOC,QAAQa,YAAY,wBACvI,wBAAQpB,UAAW,OAAQS,QAAS,SAACL,GAAD,OAPtBiB,EAO0Cb,EAN5DX,EAAMyB,UAAUD,QAChBH,EAAQ,IAFZ,IAAsBG,GAOd,qBCRNE,EAAc,GA8BLC,MA5Bf,WACE,MAAwBP,mBAASM,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAA0CT,oBAAS,GAAnD,mBAAOU,EAAP,KAAsBC,EAAtB,KACIC,EAAeJ,EAAKK,QAAO,SAACT,GAAD,OAAUM,IAAkBN,EAAKnB,aAahE,OAAQ,sBAAKF,UAAW,MAAhB,UACA,+CACA,cAAC,EAAD,CAASA,UAAW,UAAWsB,UAAW,SAACd,GAAD,OAAUkB,EAAQD,EAAKM,OAAO,CAAC,CAACjC,GAAIqB,cAAoBJ,MAAOP,SAC3G,cAAC,EAAD,CAAOR,UAAW,QAASY,KAAMiB,EAAcxB,kBAdrD,SAA+BP,EAAGkC,EAAMC,GACtB,UAAVD,GACAN,EAAQD,EAAKZ,KAAI,SAAAC,GAAI,OAAIA,EAAKhB,KAAOA,EAAZ,2BAAoBgB,GAApB,IAA0BC,MAAOkB,IAASnB,MAGzD,cAAVkB,GACAN,EAAQD,EAAKZ,KAAI,SAAAC,GAAI,OAAIA,EAAKhB,KAAOA,EAAZ,2BAAoBgB,GAApB,IAA0BZ,UAAW+B,IAASnB,OAQgBJ,aAAgB,SAACwB,GAAD,OAAeR,EAAQD,EAAKK,QAAO,SAAAT,GAAI,OAAIA,EAAKvB,KAAOoC,SAC9J,sBAAKlC,UAAW,aAAhB,UACI,wBAAQA,UAAW,cAAeS,QAAS,SAAAL,GAAC,OAAIsB,EAAQ,KAAxD,wBACA,yBAAQ1B,UAAU,cAAcS,QAAS,SAAAL,GAAC,OAAIwB,GAAkBD,IAAhE,cAAkFA,EAAe,sBAAuB,2BCxBtIQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.54378fba.chunk.js","sourcesContent":["import React from 'react';\nimport './Task.css';\n\nfunction Task(props) {\n\n    return <div key={props.id}>\n        <div id=\"task\">\n            <input type=\"checkbox\" className=\"check\" checked={props.completed} onChange={e => props.onTaskFieldChange(props.id, \"completed\",e.target.checked)}/>\n            <input type=\"text\" value={props.text} className={'writing'} onChange={e => props.onTaskFieldChange(props.id, \"title\",e.target.value)}/>\n            <button className={\"deleteButton\"} onClick={e => props.onDeleteTask(props.id)}>Delete</button>\n        </div>\n\n    </div>\n}\n\nexport default Task;","import Task from'./Task';\nimport React, {useState} from \"react\";\nimport './Tasks.css';\n\nfunction Tasks(props) {\n    return (<div className={'Tasks'}>\n        {props.list.map(elem => <div>\n                                    <Task\n                                        id = {elem.id}\n                                        onTaskFieldChange={props.onTaskFieldChange}\n                                        className='Task'\n                                        onDeleteTask={props.onDeleteTask}\n                                      text={elem.title} {...elem}/>\n                                </div>)}\n    </div>);\n}\n\nexport default Tasks;","import React, {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport './AddTask.css';\n\nfunction AddTask(props) {\n    const [text, setText] = useState(\"\");\n\n    function clickHandler(task){\n        props.onAddTask(task)\n        setText(\"\")\n    }\n\n    return <div className={'fullAdd'}>\n            <input className=\"taskTextField\" type=\"text\" id ={generateUniqueID()} value={text} onChange={e => setText(e.target.value)} placeholder=\"Enter new task here\"/>\n            <button className={'plus'} onClick={(e) => clickHandler(text)}> + </button>\n    </div>\n}\n\nexport default AddTask;","import './App.css';\nimport Tasks from \"./Tasks\";\nimport React, {useState} from \"react\";\nimport AddTask from \"./AddTask\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nconst initialData = []\n\nfunction App() {\n  const [data, setData] = useState(initialData);\n  const [showCompleted, setShowCompleted] = useState(true);\n  let filteredList = data.filter((task) => showCompleted || !task.completed);\n\n  function handleTaskFieldChange(id,field,newVal){\n      if (field === \"title\"){\n          setData(data.map(elem => elem.id === id? {...elem, title: newVal}: elem))\n\n      }\n      if (field === \"completed\"){\n          setData(data.map(elem => elem.id === id? {...elem, completed: newVal}: elem))\n\n      }\n  }\n\n  return (<div className={'App'}>\n          <h1>Checklist App</h1>\n          <AddTask className={'addTask'} onAddTask={(text) => setData(data.concat([{id: generateUniqueID(), title: text}]))}/>\n        <Tasks className={'Tasks'} list={filteredList} onTaskFieldChange={handleTaskFieldChange} onDeleteTask = {(deletedId) => setData(data.filter(task => task.id !== deletedId))}/>\n          <div className={'endButtons'}>\n              <button className={'largeButton'} onClick={e => setData([])}>Delete All</button>\n              <button className=\"largeButton\" onClick={e => setShowCompleted(!showCompleted)}> {showCompleted? \"Hide Complete Tasks\": \"Show All Tasks\"}</button>\n          </div>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}