{"version":3,"sources":["Sorting.js","Task.js","Tasks.js","AddTask.js","List.js","Lists.js","Tab.js","TabList.js","App.js","index.js"],"names":["Sorting","props","className","id","onClick","e","onSelection","Task","type","checked","completed","onChange","onTaskFieldChange","target","value","text","role","priority","onDeleteTask","Tasks","useState","list","map","elem","title","AddTask","setText","generateUniqueID","placeholder","task","onAddTask","List","tasksQuery","db","collection","selectedListId","field","setField","direction","setDirection","useCollection","orderBy","loading","error","taskArray","i","docs","length","data","showCompleted","setShowCompleted","filteredList","filter","handleDeleteTasks","deletedIds","doc","delete","taskName","creationDate","Date","toLocaleString","set","classname","taskId","newVal","updateTask","console","log","update","onUnselectListId","Lists","query","listArray","onSelectListId","push","Tab","classNames","activeTab","label","join","onClickTab","TabList","children","key","setActiveTab","child","find","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","googleProvider","GoogleAuthProvider","FAKE_EMAIL","FAKE_PASSWORD","SignIn","useSignInWithEmailAndPassword","signInWithEmailAndPassword","userCredential","message","signInWithPopup","SignUp","useCreateUserWithEmailAndPassword","createUserWithEmailAndPassword","SignedInApp","setSelectedListId","App","useAuthState","user","displayName","email","signOut","emailVerified","currentUser","sendEmailVerification","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.658415f0.chunk.js","sourcesContent":["import React from \"react\";\nimport './Sorting.css';\n\nfunction Sorting(props) {\n    return (<div className={'Sorting'}>\n        <p>Sort by: </p>\n        <div id={'sortButton'}>\n            <button className={'sortTon'} onClick={e => props.onSelection('creationDate', 'desc')}>Creation Date</button>\n            <button className={'sortTon'} onClick={e => props.onSelection('title', 'asc')}>Name</button>\n            <button className={'sortTon'} onClick={e => props.onSelection('priority', 'desc')}>Priority</button>\n        </div>\n    </div>);\n}\n\nexport default Sorting;","import React from 'react';\nimport './Task.css';\n\nfunction Task(props) {\n\n    return <div key={props.id}>\n        <div id=\"task\">\n            <div id={\"beginGroup\"}>\n                <input type=\"checkbox\" className=\"check\" checked={props.completed} onChange={e => props.onTaskFieldChange(props.id, \"completed\",e.target.checked)}/>\n                <input type=\"text\" value={props.text} className={'writing'} onChange={e => props.onTaskFieldChange(props.id, \"title\",e.target.value)}/>\n            </div>\n            <div id={\"endGroup\"}>\n                <div id={\"priority\"}>\n                    <button aria-label={\"low priority\"} role={\"checkbox\"} aria-checked={props.priority >= 1 ? \"true\" : \"false\"} className={props.priority >= 1 ? \"filled\" : \"empty\"} onClick={e => props.onTaskFieldChange(props.id, \"priority\", 1)}/>\n                    <button aria-label={\"middle priority\"} role={\"checkbox\"} aria-checked={props.priority >= 2 ? \"true\" : \"false\"} className={props.priority >= 2 ? \"filled\" : \"empty\"} onClick={e => props.onTaskFieldChange(props.id, \"priority\", 2)}/>\n                    <button aria-label={\"high priority\"} role={\"checkbox\"} aria-checked={props.priority >= 3 ? \"true\" : \"false\"} className={props.priority >= 3 ? \"filled\" : \"empty\"} onClick={e => props.onTaskFieldChange(props.id, \"priority\", 3)}/>\n                </div>\n                <button className={\"deleteButton\"} onClick={e => props.onDeleteTask([props.id])}>Delete</button>\n            </div>\n        </div>\n\n    </div>\n}\n\nexport default Task;","import Task from'./Task';\nimport React, {useState} from \"react\";\nimport './Tasks.css';\n\nfunction Tasks(props) {\n    const [selectedId, setSelectedId] = useState(null);\n    return (<div className={'Tasks'}>\n        {props.list.map(elem => <div>\n                                    <Task\n                                        id = {elem.id}\n                                        priority={elem.priority}\n                                        onTaskFieldChange={props.onTaskFieldChange}\n                                        className='Task'\n                                        onDeleteTask={props.onDeleteTask}\n                                      text={elem.title} {...elem}/>\n                                </div>)}\n    </div>);\n}\n\nexport default Tasks;","import React, {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport './AddTask.css';\n\nfunction AddTask(props) {\n    const [text, setText] = useState(\"\");\n\n    function clickHandler(task){\n        props.onAddTask(task)\n        setText(\"\")\n    }\n\n    return <div className={'fullAdd'}>\n            <input className=\"taskTextField\" type=\"text\" id ={generateUniqueID()} value={text} onChange={e => setText(e.target.value)} placeholder=\"Enter new task here\"/>\n            <button aria-label={\"Add task\"} className={'plus'} onClick={(e) => clickHandler(text)}> + </button>\n    </div>\n}\n\nexport default AddTask;","import React, {useState} from \"react\";\nimport Sorting from \"./Sorting\";\nimport Tasks from \"./Tasks\";\nimport AddTask from \"./AddTask\";\n\nimport './List.css';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n\n\n\nfunction List(props) {\n    const tasksQuery = props.db.collection(\"Lists/\"+ props.selectedListId + \"/Tasks\")\n\n    const [field, setField] = useState(\"creationDate\")\n    const [direction, setDirection] = useState(\"desc\")\n    const [value, loading, error] = useCollection(tasksQuery.orderBy(field, direction));\n\n    const taskArray = [];\n\n    if (value) {\n        for (let i=0; i<value.docs.length; i++) {\n            taskArray[i] = value.docs[i].data();\n        }\n    }\n\n    const [showCompleted, setShowCompleted] = useState(true);\n    const filteredList = taskArray.filter((task) => showCompleted || !task.completed);\n\n    function handleAddTask(taskName) {\n        const task = {id:generateUniqueID(), title:taskName, priority:0, creationDate:Date.toLocaleString()};\n        tasksQuery.doc(task.id).set(task);\n    }\n\n    function handleTaskFieldChange(taskId, field, newVal) {\n        const updateTask = {[field]:newVal };\n        console.log(field, newVal);\n        tasksQuery.doc(taskId).update(updateTask);\n    }\n\n    function handleDeleteTasks(deletedIds) {\n        for (let i=0; i < deletedIds.length; i++){\n            tasksQuery.doc(deletedIds[i]).delete();\n        }\n    }\n\n    function sortBy(field, direction) {\n        setField(field)\n        setDirection(direction)\n    }\n\n\n\n    return (<div className={'App'}>\n            {loading && <p>Page is loading</p>}\n            {error && <p>Error loading page</p>}\n\n            <AddTask className={'addTask'}\n                     onAddTask={handleAddTask}/>\n            <Sorting classname={\"sort\"} onSelection={sortBy}/>\n            <Tasks className={'Tasks'} list={filteredList} onTaskFieldChange={handleTaskFieldChange}\n                   onDeleteTask={handleDeleteTasks}/>\n            <div className={'endButtons'}>\n                {/*follow directions for delete task but apply to all, don't filter anything out*/}\n                <button className={'largeButton'} onClick={e => handleDeleteTasks(filteredList.map((task) => task.id))}>Delete All</button>\n                <button className=\"largeButton\"\n                        onClick={e => setShowCompleted(!showCompleted)}> {showCompleted ? \"Hide Complete Tasks\" : \"Show All Tasks\"}</button>\n                <button className=\"largeButton\"\n                        onClick={e => props.onUnselectListId(0)}> Back to List Catalog</button>\n            </div>\n        </div>\n    );\n}\n\nexport default List;\n","import List from'./List';\nimport React, {useState} from \"react\";\nimport Task from \"./Task\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\nimport \"./Lists.css\";\n\nfunction Lists(props) {\n    const query = props.db.collection(\"Lists\");\n    const [value,loading,error] = useCollection(query);\n\n    if (value) {\n        for (let i=0; i<value.docs.length; i++) {\n            props.listArray[i] = value.docs[i].data();\n        }\n    }\n\n    function handleAddList(){\n        const list = {id:generateUniqueID()};\n        query.doc(list.id).set(list);\n        props.listArray.push(list);\n        props.onSelectListId(list.id);\n    }\n\n    function handleDeleteLists(deletedIds) {\n        for (let i=0; i < deletedIds.length; i++){\n            query.doc(deletedIds[i]).delete();\n        }\n    }\n\n    return (<div className={'Tasks'}>\n        <div id={'Lists'}>\n            {loading && <p>Page is loading</p>}\n            {error && <p>Error loading page</p>}\n            {props.listArray.map(elem => <div>\n                <button id={\"ListButton\"} onClick={e => props.onSelectListId(elem.id)}> List {elem.id}</button>\n            </div>)}\n        </div>\n        <div className={'endButtons'}>\n            <button className={'largeButton'} onClick={handleAddList}>Add List</button>\n        </div>\n    </div>);\n}\n\nexport default Lists;","import './Tab.css';\n\nfunction Tab(props) {\n    const classNames = [\"tab-list-item\"];\n    if (props.activeTab === props.label) {\n        classNames.push(\"tab-list-active\");\n    }\n    return <li className={classNames.join(\" \")}\n               onClick={() => props.onClickTab(props.label)}>\n        {props.label}\n    </li>\n}\n\nexport default Tab;","import React, {useState} from 'react';\nimport Tab from './Tab.js';\nimport './Tablist.css';\n\nfunction TabList(props) {\n    const [activeTab, setActiveTab] = useState(props.children[0].key);\n    return (\n        <div className=\"tabs\">\n            <ol className=\"tab-list\">\n                {props.children.map(child =>\n                    <Tab key={child.key}\n                         label={child.key}\n                         activeTab={activeTab}\n                         onClickTab={(label) => setActiveTab(label)}/>)}\n            </ol>\n            {props.children.find((child) => child.key === activeTab)}\n        </div>\n    );\n}\n\nexport default TabList;","import React, {useState} from \"react\";\nimport firebase from \"firebase/compat\";\nimport List from \"./List\";\nimport Lists from \"./Lists\";\nimport TabList from \"./TabList\";\nimport './App.css';\n\nimport {\n    useAuthState,\n    useCreateUserWithEmailAndPassword,\n    useSignInWithEmailAndPassword\n} from 'react-firebase-hooks/auth';\n\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDeSrL-YstSATx0OqeATHzUBttu5Qxz9tM\",\n    authDomain: \"task-app-34b9f.firebaseapp.com\",\n    projectId: \"task-app-34b9f\",\n    storageBucket: \"task-app-34b9f.appspot.com\",\n    messagingSenderId: \"982606058122\",\n    appId: \"1:982606058122:web:ffce85d25a8dfd5c38d373\",\n    measurementId: \"${config.measurementId}\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore()\n\n\nconst auth = firebase.auth();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\nfunction App(props) {\n    const [user, loading, error] = useAuthState(auth);\n\n    function verifyEmail() {\n        auth.currentUser.sendEmailVerification();\n    }\n\n    if (loading) {\n        return <p>Checking...</p>;\n    } else if (user) {\n        return <div>\n            {user.displayName || user.email}\n            <SignedInApp {...props} user={user}/>\n            <button type=\"button\" className={'largeButton'} onClick={() => auth.signOut()}>Logout</button>\n            {!user.emailVerified && <button type=\"button\" className={'largeButton'} onClick={verifyEmail}>Verify email</button>}\n        </div>\n    } else {\n        return <>\n            {error && <p>Error App: {error.message}</p>}\n            <TabList>\n                <SignIn key=\"Sign In\"/>\n                <SignUp key=\"Sign Up\"/>\n            </TabList>\n        </>\n    }\n}\n\nconst FAKE_EMAIL = 'foo@bar.com';\nconst FAKE_PASSWORD = 'xyzzyxx';\n\n\nfunction SignIn() {\n    const [\n        signInWithEmailAndPassword,\n        userCredential, loading, error\n    ] = useSignInWithEmailAndPassword(auth);\n\n    if (userCredential) {\n        // Shouldn't happen because App should see that\n        // we are signed in.\n        return <div>Unexpectedly signed in already</div>\n    } else if (loading) {\n        return <p>Logging in…</p>\n    }\n    return <div>\n        {error && <p>\"Error logging in: \" {error.message}</p>}\n        <button className={'largeButton'} onClick={() =>\n            signInWithEmailAndPassword(FAKE_EMAIL, FAKE_PASSWORD)}>Login with test user Email/PW\n        </button>\n        <button className={'largeButton'} onClick={() =>\n            auth.signInWithPopup(googleProvider)}>Login with Google\n        </button>\n    </div>\n}\n\nfunction SignUp() {\n    const [\n        createUserWithEmailAndPassword,\n        userCredential, loading, error\n    ] = useCreateUserWithEmailAndPassword(auth);\n\n    if (userCredential) {\n        // Shouldn't happen because App should see that\n        // we are signed in.\n        return <div>Unexpectedly signed in already</div>\n    } else if (loading) {\n        return <p>Signing up…</p>\n    }\n    return <div>\n        {error && <p>\"Error signing up: \" {error.message}</p>}\n        <button className={'largeButton'} onClick={() =>\n            createUserWithEmailAndPassword(FAKE_EMAIL, FAKE_PASSWORD)}>\n            Create test user\n        </button>\n\n    </div>\n}\n\nconst collectionName = \"People-AuthenticationRequired\"\n\nfunction SignedInApp(props) {\n    const listArray = [];\n    const [selectedListId, setSelectedListId] = useState(0)\n\n\n    return (<div className={'App'}>\n            <h1 aria-label={\"Checklist App\"}>Checklist App</h1>\n            {selectedListId ? <List db={db} onUnselectListId={setSelectedListId} selectedListId={selectedListId}/>: <Lists db={db} listArray = {listArray} onSelectListId={setSelectedListId} />}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}