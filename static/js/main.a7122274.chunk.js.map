{"version":3,"sources":["Sorting.js","Task.js","Tasks.js","AddTask.js","App.js","index.js"],"names":["Sorting","props","className","id","onClick","e","onSelection","Task","type","checked","completed","onChange","onTaskFieldChange","target","value","text","priority","onDeleteTask","Tasks","useState","list","map","elem","title","AddTask","setText","generateUniqueID","placeholder","task","onAddTask","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","App","query","collection","useCollection","loading","taskArray","i","docs","length","data","showCompleted","setShowCompleted","filteredList","filter","handleDeleteTasks","deletedIds","doc","delete","taskName","creationDate","Date","toLocaleString","set","classname","field","direction","orderBy","console","log","taskId","newVal","updateTask","update","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAceA,MAXf,SAAiBC,GACb,OAAQ,sBAAKC,UAAW,UAAhB,UACJ,0CACA,sBAAKC,GAAI,aAAT,UACI,wBAAQD,UAAW,UAAWE,QAAS,SAAAC,GAAC,OAAIJ,EAAMK,YAAY,eAAgB,SAA9E,2BACA,wBAAQJ,UAAW,UAAWE,QAAS,SAAAC,GAAC,OAAIJ,EAAMK,YAAY,QAAS,QAAvE,kBACA,wBAAQJ,UAAW,UAAWE,QAAS,SAAAC,GAAC,OAAIJ,EAAMK,YAAY,WAAY,SAA1E,6B,cCWGC,MAjBf,SAAcN,GAEV,OAAO,8BACH,sBAAKE,GAAG,OAAR,UACI,uBAAOK,KAAK,WAAWN,UAAU,QAAQO,QAASR,EAAMS,UAAWC,SAAU,SAAAN,GAAC,OAAIJ,EAAMW,kBAAkBX,EAAME,GAAI,YAAYE,EAAEQ,OAAOJ,YACzI,uBAAOD,KAAK,OAAOM,MAAOb,EAAMc,KAAMb,UAAW,UAAWS,SAAU,SAAAN,GAAC,OAAIJ,EAAMW,kBAAkBX,EAAME,GAAI,QAAQE,EAAEQ,OAAOC,UAC9H,sBAAKX,GAAI,WAAT,UACI,wBAAQD,UAAWD,EAAMe,UAAY,EAAI,SAAW,QAASZ,QAAS,SAAAC,GAAC,OAAIJ,EAAMW,kBAAkBX,EAAME,GAAI,WAAY,MACzH,wBAAQD,UAAWD,EAAMe,UAAY,EAAI,SAAW,QAASZ,QAAS,SAAAC,GAAC,OAAIJ,EAAMW,kBAAkBX,EAAME,GAAI,WAAY,MACzH,wBAAQD,UAAWD,EAAMe,UAAY,EAAI,SAAW,QAASZ,QAAS,SAAAC,GAAC,OAAIJ,EAAMW,kBAAkBX,EAAME,GAAI,WAAY,SAE7H,wBAAQD,UAAW,eAAgBE,QAAS,SAAAC,GAAC,OAAIJ,EAAMgB,aAAa,CAAChB,EAAME,MAA3E,wBATSF,EAAME,K,MCcZe,MAff,SAAejB,GACX,MAAoCkB,mBAAS,MAA7C,mBACA,OADA,UACQ,qBAAKjB,UAAW,QAAhB,SACHD,EAAMmB,KAAKC,KAAI,SAAAC,GAAI,OAAI,8BACI,cAAC,EAAD,aACInB,GAAMmB,EAAKnB,GACXa,SAAUM,EAAKN,SACfJ,kBAAmBX,EAAMW,kBACzBV,UAAU,OACVe,aAAchB,EAAMgB,aACtBF,KAAMO,EAAKC,OAAWD,Y,cCI7CE,MAdf,SAAiBvB,GACb,MAAwBkB,mBAAS,IAAjC,mBAAOJ,EAAP,KAAaU,EAAb,KAOA,OAAO,sBAAKvB,UAAW,UAAhB,UACC,uBAAOA,UAAU,gBAAgBM,KAAK,OAAOL,GAAKuB,cAAoBZ,MAAOC,EAAMJ,SAAU,SAAAN,GAAC,OAAIoB,EAAQpB,EAAEQ,OAAOC,QAAQa,YAAY,wBACvI,wBAAQzB,UAAW,OAAQE,QAAS,SAACC,GAAD,OAPtBuB,EAO0Cb,EAN5Dd,EAAM4B,UAAUD,QAChBH,EAAQ,IAFZ,IAAsBG,GAOd,qB,gBCKZE,IAASC,cARc,CACnBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAGX,IAAMC,EAAKR,IAASS,YA8DLC,MA5Df,WACI,IACMC,EAAQH,EAAGI,WADJ,mBAGb,EAAgCC,YAAcF,GAA9C,mBAAO3B,EAAP,KAAc8B,EAAd,KAEMC,GAFN,KAEkB,IAElB,GAAI/B,EACA,IAAK,IAAIgC,EAAE,EAAGA,EAAEhC,EAAMiC,KAAKC,OAAQF,IAC/BD,EAAUC,GAAKhC,EAAMiC,KAAKD,GAAGG,OAIrC,MAA0C9B,oBAAS,GAAnD,mBAAO+B,EAAP,KAAsBC,EAAtB,KACMC,EAAeP,EAAUQ,QAAO,SAACzB,GAAD,OAAUsB,IAAkBtB,EAAKlB,aAavE,SAAS4C,EAAkBC,GACvB,IAAK,IAAIT,EAAE,EAAGA,EAAIS,EAAWP,OAAQF,IACjCL,EAAMe,IAAID,EAAWT,IAAIW,SAWjC,OAAQ,sBAAKvD,UAAW,MAAhB,UACC0C,GAAW,gDAEZ,+CACA,cAAC,EAAD,CAAS1C,UAAW,UACX2B,UA7BjB,SAAuB6B,GACnB,IAAM9B,EAAO,CAACzB,GAAGuB,cAAoBH,MAAMmC,EAAU1C,SAAS,EAAG2C,aAAaC,KAAKC,kBACnFpB,EAAMe,IAAI5B,EAAKzB,IAAI2D,IAAIlC,MA4BnB,cAAC,EAAD,CAASmC,UAAW,OAAQzD,YAbpC,SAAgB0D,EAAOC,GACnBxB,EAAMyB,QAAQF,EAAOC,GACrBE,QAAQC,IAAIvB,MAYR,cAAC,EAAD,CAAO3C,UAAW,QAASkB,KAAMgC,EAAcxC,kBA1BvD,SAA+ByD,EAAQL,EAAOM,GAC1C,IAAMC,EAAU,eAAKP,EAAOM,GAC5BH,QAAQC,IAAIJ,EAAOM,GACnB7B,EAAMe,IAAIa,GAAQG,OAAOD,IAwBdtD,aAAcqC,IACrB,sBAAKpD,UAAW,aAAhB,UAEI,wBAAQA,UAAW,cAAeE,QAAS,SAAAC,GAAC,OAAIiD,EAAkBF,EAAa/B,KAAI,SAACO,GAAD,OAAUA,EAAKzB,QAAlG,wBACA,yBAAQD,UAAU,cACVE,QAAS,SAAAC,GAAC,OAAI8C,GAAkBD,IADxC,cAC0DA,EAAgB,sBAAwB,2BCtElHuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a7122274.chunk.js","sourcesContent":["import React from \"react\";\nimport './Sorting.css';\n\nfunction Sorting(props) {\n    return (<div className={'Sorting'}>\n        <p>Sort by: </p>\n        <div id={'sortButton'}>\n            <button className={'sortTon'} onClick={e => props.onSelection('creationDate', 'desc')}>Creation Date</button>\n            <button className={'sortTon'} onClick={e => props.onSelection('title', 'asc')}>Name</button>\n            <button className={'sortTon'} onClick={e => props.onSelection('priority', 'desc')}>Priority</button>\n        </div>\n    </div>);\n}\n\nexport default Sorting;","import React from 'react';\nimport './Task.css';\n\nfunction Task(props) {\n\n    return <div key={props.id}>\n        <div id=\"task\">\n            <input type=\"checkbox\" className=\"check\" checked={props.completed} onChange={e => props.onTaskFieldChange(props.id, \"completed\",e.target.checked)}/>\n            <input type=\"text\" value={props.text} className={'writing'} onChange={e => props.onTaskFieldChange(props.id, \"title\",e.target.value)}/>\n            <div id={\"priority\"}>\n                <button className={props.priority >= 1 ? \"filled\" : \"empty\"} onClick={e => props.onTaskFieldChange(props.id, \"priority\", 1)}/>\n                <button className={props.priority >= 2 ? \"filled\" : \"empty\"} onClick={e => props.onTaskFieldChange(props.id, \"priority\", 2)}/>\n                <button className={props.priority >= 3 ? \"filled\" : \"empty\"} onClick={e => props.onTaskFieldChange(props.id, \"priority\", 3)}/>\n            </div>\n            <button className={\"deleteButton\"} onClick={e => props.onDeleteTask([props.id])}>Delete</button>\n        </div>\n\n    </div>\n}\n\nexport default Task;","import Task from'./Task';\nimport React, {useState} from \"react\";\nimport './Tasks.css';\n\nfunction Tasks(props) {\n    const [selectedId, setSelectedId] = useState(null);\n    return (<div className={'Tasks'}>\n        {props.list.map(elem => <div>\n                                    <Task\n                                        id = {elem.id}\n                                        priority={elem.priority}\n                                        onTaskFieldChange={props.onTaskFieldChange}\n                                        className='Task'\n                                        onDeleteTask={props.onDeleteTask}\n                                      text={elem.title} {...elem}/>\n                                </div>)}\n    </div>);\n}\n\nexport default Tasks;","import React, {useState} from \"react\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport './AddTask.css';\n\nfunction AddTask(props) {\n    const [text, setText] = useState(\"\");\n\n    function clickHandler(task){\n        props.onAddTask(task)\n        setText(\"\")\n    }\n\n    return <div className={'fullAdd'}>\n            <input className=\"taskTextField\" type=\"text\" id ={generateUniqueID()} value={text} onChange={e => setText(e.target.value)} placeholder=\"Enter new task here\"/>\n            <button className={'plus'} onClick={(e) => clickHandler(text)}> + </button>\n    </div>\n}\n\nexport default AddTask;","import './App.css';\nimport Sorting from \"./Sorting\";\nimport Tasks from \"./Tasks\";\nimport React, {useState} from \"react\";\nimport AddTask from \"./AddTask\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// const initialData = []\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n    authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n    projectId: \"hmc-cs124-fa21-labs\",\n    storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n    messagingSenderId: \"949410042946\",\n    appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore()\n\nfunction App() {\n    const name = \"elakshi16-tasks\";\n    const query = db.collection(name);\n\n    const [value, loading, error] = useCollection(query);\n\n    const taskArray = [];\n\n    if (value) {\n        for (let i=0; i<value.docs.length; i++) {\n            taskArray[i] = value.docs[i].data();\n        }\n    }\n\n    const [showCompleted, setShowCompleted] = useState(true);\n    const filteredList = taskArray.filter((task) => showCompleted || !task.completed);\n\n    function handleAddTask(taskName) {\n        const task = {id:generateUniqueID(), title:taskName, priority:0, creationDate:Date.toLocaleString()};\n        query.doc(task.id).set(task);\n    }\n\n    function handleTaskFieldChange(taskId, field, newVal) {\n        const updateTask = {[field]:newVal };\n        console.log(field, newVal);\n        query.doc(taskId).update(updateTask);\n    }\n\n    function handleDeleteTasks(deletedIds) {\n        for (let i=0; i < deletedIds.length; i++){\n            query.doc(deletedIds[i]).delete();\n        }\n    }\n\n    function sortBy(field, direction) {\n        query.orderBy(field, direction);\n        console.log(taskArray);\n    }\n\n\n\n    return (<div className={'App'}>\n            {loading && <p>Page is loading</p>}\n\n            <h1>Checklist App</h1>\n            <AddTask className={'addTask'}\n                     onAddTask={handleAddTask}/>\n            <Sorting classname={\"sort\"} onSelection={sortBy}/>\n            <Tasks className={'Tasks'} list={filteredList} onTaskFieldChange={handleTaskFieldChange}\n                   onDeleteTask={handleDeleteTasks}/>\n            <div className={'endButtons'}>\n                {/*follow directions for delete task but apply to all, don't filter anything out*/}\n                <button className={'largeButton'} onClick={e => handleDeleteTasks(filteredList.map((task) => task.id))}>Delete All</button>\n                <button className=\"largeButton\"\n                        onClick={e => setShowCompleted(!showCompleted)}> {showCompleted ? \"Hide Complete Tasks\" : \"Show All Tasks\"}</button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}