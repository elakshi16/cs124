{"ast":null,"code":"var _jsxFileName = \"/Users/elakshishah/cs124/lab/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Tasks from \"./Tasks\";\nimport React, { useState } from \"react\";\nimport AddTask from \"./AddTask\";\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialData = [// {\n  //   title: \"do something\",\n  //   id: \"123\",\n  //   completed: true\n  // },\n  // {\n  //   title: \"do dishes\",\n  //   id: \"124\",\n  //   completed: false\n  // }\n]; // some toggleCompleted (similar to handleFieldChanged in People)\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState(initialData);\n  const [showCompleted, setShowCompleted] = useState(true);\n  let filteredList = data.filter(task => showCompleted || !task.completed);\n\n  function handleTaskFieldChange(id, field, newVal) {\n    if (field === \"title\") {\n      setData(data.map(elem => elem.id === id ? { ...elem,\n        title: newVal\n      } : elem));\n    }\n\n    if (field === \"completed\") {\n      setData(data.map(elem => elem.id === id ? { ...elem,\n        completed: newVal\n      } : elem));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'App',\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Checklist App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      className: 'addTask',\n      onAddTask: text => setData(data.concat([{\n        id: generateUniqueID(),\n        title: text\n      }]))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      className: 'Tasks',\n      list: filteredList,\n      onTaskFieldChange: handleTaskFieldChange,\n      onDeleteTask: deletedId => setData(data.filter(task => task.id !== deletedId))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'endButtons',\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'largeButton',\n        onClick: e => setData([]),\n        children: \"Delete All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"largeButton\",\n        onClick: e => setShowCompleted(!showCompleted),\n        children: [\" \", showCompleted ? \"Hide Complete Tasks\" : \"Show All Tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"YM4GUlPYBQTdstiiFnIiASNlqUQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/elakshishah/cs124/lab/src/App.js"],"names":["Tasks","React","useState","AddTask","generateUniqueID","initialData","App","data","setData","showCompleted","setShowCompleted","filteredList","filter","task","completed","handleTaskFieldChange","id","field","newVal","map","elem","title","text","concat","deletedId","e"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,gBAAR,QAA+B,8CAA/B;;AAEA,MAAMC,WAAW,GAAG,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVkB,CAApB,C,CAYC;;AACD,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAACG,WAAD,CAAhC;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,IAAD,CAAlD;AACA,MAAIS,YAAY,GAAGJ,IAAI,CAACK,MAAL,CAAaC,IAAD,IAAUJ,aAAa,IAAI,CAACI,IAAI,CAACC,SAA7C,CAAnB;;AAEA,WAASC,qBAAT,CAA+BC,EAA/B,EAAkCC,KAAlC,EAAwCC,MAAxC,EAA+C;AAC3C,QAAID,KAAK,KAAK,OAAd,EAAsB;AAClBT,MAAAA,OAAO,CAACD,IAAI,CAACY,GAAL,CAASC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAAZ,GAAgB,EAAC,GAAGI,IAAJ;AAAUC,QAAAA,KAAK,EAAEH;AAAjB,OAAhB,GAA0CE,IAA3D,CAAD,CAAP;AAEH;;AACD,QAAIH,KAAK,KAAK,WAAd,EAA0B;AACtBT,MAAAA,OAAO,CAACD,IAAI,CAACY,GAAL,CAASC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAAZ,GAAgB,EAAC,GAAGI,IAAJ;AAAUN,QAAAA,SAAS,EAAEI;AAArB,OAAhB,GAA8CE,IAA/D,CAAD,CAAP;AAEH;AACJ;;AAED,sBAAQ;AAAK,IAAA,SAAS,EAAE,KAAhB;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,OAAD;AAAS,MAAA,SAAS,EAAE,SAApB;AAA+B,MAAA,SAAS,EAAGE,IAAD,IAAUd,OAAO,CAACD,IAAI,CAACgB,MAAL,CAAY,CAAC;AAACP,QAAAA,EAAE,EAAEZ,gBAAgB,EAArB;AAAyBiB,QAAAA,KAAK,EAAEC;AAAhC,OAAD,CAAZ,CAAD;AAA3D;AAAA;AAAA;AAAA;AAAA,YAFA,eAGF,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,OAAlB;AAA2B,MAAA,IAAI,EAAEX,YAAjC;AAA+C,MAAA,iBAAiB,EAAEI,qBAAlE;AAAyF,MAAA,YAAY,EAAKS,SAAD,IAAehB,OAAO,CAACD,IAAI,CAACK,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYQ,SAAhC,CAAD;AAA/H;AAAA;AAAA;AAAA;AAAA,YAHE,eAIA;AAAK,MAAA,SAAS,EAAE,YAAhB;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAE,aAAnB;AAAkC,QAAA,OAAO,EAAEC,CAAC,IAAIjB,OAAO,CAAC,EAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEiB,CAAC,IAAIf,gBAAgB,CAAC,CAACD,aAAF,CAA9D;AAAA,wBAAkFA,aAAa,GAAE,qBAAF,GAAyB,gBAAxH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAUD;;GA1BQH,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Tasks from \"./Tasks\";\nimport React, {useState} from \"react\";\nimport AddTask from \"./AddTask\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nconst initialData = [\n  // {\n  //   title: \"do something\",\n  //   id: \"123\",\n  //   completed: true\n  // },\n  // {\n  //   title: \"do dishes\",\n  //   id: \"124\",\n  //   completed: false\n  // }\n]\n // some toggleCompleted (similar to handleFieldChanged in People)\nfunction App() {\n  const [data, setData] = useState(initialData);\n  const [showCompleted, setShowCompleted] = useState(true);\n  let filteredList = data.filter((task) => showCompleted || !task.completed);\n\n  function handleTaskFieldChange(id,field,newVal){\n      if (field === \"title\"){\n          setData(data.map(elem => elem.id === id? {...elem, title: newVal}: elem))\n\n      }\n      if (field === \"completed\"){\n          setData(data.map(elem => elem.id === id? {...elem, completed: newVal}: elem))\n\n      }\n  }\n\n  return (<div className={'App'}>\n          <h1>Checklist App</h1>\n          <AddTask className={'addTask'} onAddTask={(text) => setData(data.concat([{id: generateUniqueID(), title: text}]))}/>\n        <Tasks className={'Tasks'} list={filteredList} onTaskFieldChange={handleTaskFieldChange} onDeleteTask = {(deletedId) => setData(data.filter(task => task.id !== deletedId))}/>\n          <div className={'endButtons'}>\n              <button className={'largeButton'} onClick={e => setData([])}>Delete All</button>\n              <button className=\"largeButton\" onClick={e => setShowCompleted(!showCompleted)}> {showCompleted? \"Hide Complete Tasks\": \"Show All Tasks\"}</button>\n          </div>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}