{"ast":null,"code":"var _jsxFileName = \"/Users/elakshishah/cs124/lab/src/Task.js\";\nimport React from 'react';\nimport './Task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task(props) {\n  console.log(\"in Task\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'Line',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: props.completed ? \"completed\" : \"incomplete\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onClick: props.toggleComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        contentEditable: \"true\",\n        children: props.taskText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, props.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/Users/elakshishah/cs124/lab/src/Task.js"],"names":["React","Task","props","console","log","completed","toggleComplete","taskText","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,sBAAO;AAAK,IAAA,SAAS,EAAE,MAAhB;AAAA,2BACH;AAAK,MAAA,SAAS,EAAGF,KAAK,CAACG,SAAP,GAAoB,WAApB,GAAkC,YAAlD;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAEH,KAAK,CAACI;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAG,QAAA,eAAe,EAAC,MAAnB;AAAA,kBAA2BJ,KAAK,CAACK;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,KAA6BL,KAAK,CAACM,EAAnC;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH;;KARQP,I;AAUT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport './Task.css';\n\nfunction Task(props) {\n    console.log(\"in Task\");\n    return <div className={'Line'} key={props.id}>\n        <div className={(props.completed) ? \"completed\" : \"incomplete\"}>\n            <input type=\"checkbox\" onClick={props.toggleComplete }/>\n            <p contentEditable=\"true\">{props.taskText}</p>\n        </div>\n    </div>\n}\n\nexport default Task;"]},"metadata":{},"sourceType":"module"}