{"ast":null,"code":"var _jsxFileName = \"/Users/catherinejang/cs124/lab/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Tasks from \"./Tasks\";\nimport { useState } from \"react\";\nimport AddTask from \"./AddTask\";\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialData = [{\n  title: \"do dishes\",\n  id: \"123\"\n}];\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState(initialData);\n  console.log(\"in app\");\n\n  function toggleVisibility(e, selectState) {\n    selectState != selectState;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddTask, {\n      onAddTask: text => setData(data.concat([{\n        id: generateUniqueID(),\n        title: text\n      }]))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      list: data,\n      onDeleteTask: deletedId => setData(data.filter(task => task.id !== deletedId))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => toggleVisibility(e, selectState),\n      children: \"Show Incomplete Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => setData([]),\n      children: \"Delete All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"hDGcfQHkZj5ZsEBk8saO8jx9VfY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/catherinejang/cs124/lab/src/App.js"],"names":["Tasks","useState","AddTask","generateUniqueID","initialData","title","id","App","data","setData","console","log","toggleVisibility","e","selectState","text","concat","deletedId","filter","task"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,gBAAR,QAA+B,8CAA/B;;AAEA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,EAAE,EAAE;AAFN,CADkB,CAApB;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACG,WAAD,CAAhC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AAEA,WAASC,gBAAT,CAA0BC,CAA1B,EAA6BC,WAA7B,EAAyC;AACvCA,IAAAA,WAAW,IAAIA,WAAf;AACD;;AACD,sBAAQ;AAAA,4BACJ,QAAC,OAAD;AAAS,MAAA,SAAS,EAAGC,IAAD,IAAUN,OAAO,CAACD,IAAI,CAACQ,MAAL,CAAY,CAAC;AAACV,QAAAA,EAAE,EAAEH,gBAAgB,EAArB;AAAyBE,QAAAA,KAAK,EAAEU;AAAhC,OAAD,CAAZ,CAAD;AAArC;AAAA;AAAA;AAAA;AAAA,YADI,eAEF,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEP,IAAb;AAAmB,MAAA,YAAY,EAAKS,SAAD,IAAeR,OAAO,CAACD,IAAI,CAACU,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACb,EAAL,KAAYW,SAAhC,CAAD;AAAzD;AAAA;AAAA;AAAA;AAAA,YAFE,eAGF;AAAQ,MAAA,OAAO,EAAEJ,CAAC,IAAID,gBAAgB,CAACC,CAAD,EAAIC,WAAJ,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHE,eAIF;AAAQ,MAAA,OAAO,EAAED,CAAC,IAAIJ,OAAO,CAAC,EAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAOD;;GAdQF,G;;KAAAA,G;AAgBT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Tasks from \"./Tasks\";\nimport {useState} from \"react\";\nimport AddTask from \"./AddTask\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nconst initialData = [\n  {\n    title: \"do dishes\",\n    id: \"123\"\n  }\n]\n\nfunction App() {\n  const [data, setData] = useState(initialData);\n  console.log(\"in app\");\n\n  function toggleVisibility(e, selectState){\n    selectState != selectState\n  }\n  return (<div>\n      <AddTask onAddTask={(text) => setData(data.concat([{id: generateUniqueID(), title: text}]))}/>\n        <Tasks list={data} onDeleteTask = {(deletedId) => setData(data.filter(task => task.id !== deletedId))}/>\n        <button onClick={e => toggleVisibility(e, selectState)}>Show Incomplete Tasks</button>\n        <button onClick={e => setData([])}>Delete All</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}