{"ast":null,"code":"var _jsxFileName = \"/Users/catherinejang/cs124/lab/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Tasks from \"./Tasks\";\nimport React, { useState } from \"react\";\nimport AddTask from \"./AddTask\";\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialData = [{\n  title: \"do something\",\n  id: \"123\",\n  completed: true\n}, {\n  title: \"do dishes\",\n  id: \"124\",\n  completed: false\n}]; // some toggleCompleted (similar to handleFieldChanged in People)\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState(initialData);\n  console.log(\"in app\"); // function toggleVisibility(){\n  //     props.list.map(elem =>(elem.completed)? :)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'App',\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Checklist App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      className: 'addTask',\n      onAddTask: text => setData(data.concat([{\n        id: generateUniqueID(),\n        title: text\n      }]))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      className: 'Tasks',\n      list: data,\n      onDeleteTask: deletedId => setData(data.filter(task => task.id !== deletedId))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: 'deleteAll',\n      onClick: e => setData([]),\n      children: \"Delete All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"showIncomplete\",\n      children: \" Hide Complete Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"hDGcfQHkZj5ZsEBk8saO8jx9VfY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/catherinejang/cs124/lab/src/App.js"],"names":["Tasks","React","useState","AddTask","generateUniqueID","initialData","title","id","completed","App","data","setData","console","log","text","concat","deletedId","filter","task","e"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,gBAAR,QAA+B,8CAA/B;;AAEA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,KAAK,EAAE,cADT;AAEEC,EAAAA,EAAE,EAAE,KAFN;AAGEC,EAAAA,SAAS,EAAE;AAHb,CADkB,EAMlB;AACEF,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,EAAE,EAAE,KAFN;AAGEC,EAAAA,SAAS,EAAE;AAHb,CANkB,CAApB,C,CAYC;;AACD,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACG,WAAD,CAAhC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAFa,CAIb;AACA;AACA;;AAEA,sBAAQ;AAAK,IAAA,SAAS,EAAE,KAAhB;AAAA,4BACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,eAEF,QAAC,OAAD;AAAS,MAAA,SAAS,EAAE,SAApB;AAA+B,MAAA,SAAS,EAAGC,IAAD,IAAUH,OAAO,CAACD,IAAI,CAACK,MAAL,CAAY,CAAC;AAACR,QAAAA,EAAE,EAAEH,gBAAgB,EAArB;AAAyBE,QAAAA,KAAK,EAAEQ;AAAhC,OAAD,CAAZ,CAAD;AAA3D;AAAA;AAAA;AAAA;AAAA,YAFE,eAGF,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,OAAlB;AAA2B,MAAA,IAAI,EAAEJ,IAAjC;AAAuC,MAAA,YAAY,EAAKM,SAAD,IAAeL,OAAO,CAACD,IAAI,CAACO,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACX,EAAL,KAAYS,SAAhC,CAAD;AAA7E;AAAA;AAAA;AAAA;AAAA,YAHE,eAIF;AAAQ,MAAA,SAAS,EAAE,WAAnB;AAAgC,MAAA,OAAO,EAAEG,CAAC,IAAIR,OAAO,CAAC,EAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJE,eAKA;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAUD;;GAlBQF,G;;KAAAA,G;AAoBT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Tasks from \"./Tasks\";\nimport React, {useState} from \"react\";\nimport AddTask from \"./AddTask\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nconst initialData = [\n  {\n    title: \"do something\",\n    id: \"123\",\n    completed: true\n  },\n  {\n    title: \"do dishes\",\n    id: \"124\",\n    completed: false\n  }\n]\n // some toggleCompleted (similar to handleFieldChanged in People)\nfunction App() {\n  const [data, setData] = useState(initialData);\n  console.log(\"in app\");\n\n  // function toggleVisibility(){\n  //     props.list.map(elem =>(elem.completed)? :)\n  // }\n\n  return (<div className={'App'}>\n        <h1>Checklist App</h1>\n        <AddTask className={'addTask'} onAddTask={(text) => setData(data.concat([{id: generateUniqueID(), title: text}]))}/>\n        <Tasks className={'Tasks'} list={data} onDeleteTask = {(deletedId) => setData(data.filter(task => task.id !== deletedId))}/>\n        <button className={'deleteAll'} onClick={e => setData([])}>Delete All</button>\n          <button className=\"showIncomplete\" > Hide Complete Tasks</button>\n          {/*<div className={'fullButton'}><button className={\"deleteButton\"} onClick={e => props.onDeleteTask(elem.id)}>Delete</button></div>*/}\n\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}