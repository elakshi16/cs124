{"ast":null,"code":"var _jsxFileName = \"/Users/catherinejang/cs124/lab/src/List.js\";\nimport React, { useState } from \"react\";\nimport Sorting from \"./Sorting\";\nimport Tasks from \"./Tasks\";\nimport AddTask from \"./AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddTask, {\n      className: 'addTask',\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sorting, {\n      classname: \"sort\",\n      onSelection: sortBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      className: 'Tasks',\n      list: filteredList,\n      onTaskFieldChange: handleTaskFieldChange,\n      onDeleteTask: handleDeleteTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'endButtons',\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'largeButton',\n        onClick: e => handleDeleteTasks(filteredList.map(task => task.id)),\n        children: \"Delete All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"largeButton\",\n        onClick: e => setShowCompleted(!showCompleted),\n        children: [\" \", showCompleted ? \"Hide Complete Tasks\" : \"Show All Tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/catherinejang/cs124/lab/src/List.js"],"names":["React","useState","Sorting","Tasks","AddTask","List","handleAddTask","sortBy","filteredList","handleTaskFieldChange","handleDeleteTasks","e","map","task","id","setShowCompleted","showCompleted"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,IAAT,GAAe;AAEX,sBACI;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,SAAS,EAAE,SAApB;AACS,MAAA,SAAS,EAAEC;AADpB;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,OAAD;AAAS,MAAA,SAAS,EAAE,MAApB;AAA4B,MAAA,WAAW,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,OAAlB;AAA2B,MAAA,IAAI,EAAEC,YAAjC;AAA+C,MAAA,iBAAiB,EAAEC,qBAAlE;AACO,MAAA,YAAY,EAAEC;AADrB;AAAA;AAAA;AAAA;AAAA,YAJJ,eAMI;AAAK,MAAA,SAAS,EAAE,YAAhB;AAAA,8BAEI;AAAQ,QAAA,SAAS,EAAE,aAAnB;AAAkC,QAAA,OAAO,EAAEC,CAAC,IAAID,iBAAiB,CAACF,YAAY,CAACI,GAAb,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAhC,CAAD,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,SAAS,EAAC,aAAlB;AACQ,QAAA,OAAO,EAAEH,CAAC,IAAII,gBAAgB,CAAC,CAACC,aAAF,CADtC;AAAA,wBAC0DA,aAAa,GAAG,qBAAH,GAA2B,gBADlG;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;KAjBQX,I;AAkBT,eAAeA,IAAf","sourcesContent":["import React, {useState} from \"react\";\nimport Sorting from \"./Sorting\";\nimport Tasks from \"./Tasks\";\nimport AddTask from \"./AddTask\";\n\nfunction List(){\n\n    return(\n        <div>\n            <AddTask className={'addTask'}\n                     onAddTask={handleAddTask}/>\n            <Sorting classname={\"sort\"} onSelection={sortBy}/>\n            <Tasks className={'Tasks'} list={filteredList} onTaskFieldChange={handleTaskFieldChange}\n                   onDeleteTask={handleDeleteTasks}/>\n            <div className={'endButtons'}>\n                {/*follow directions for delete task but apply to all, don't filter anything out*/}\n                <button className={'largeButton'} onClick={e => handleDeleteTasks(filteredList.map((task) => task.id))}>Delete All</button>\n                <button className=\"largeButton\"\n                        onClick={e => setShowCompleted(!showCompleted)}> {showCompleted ? \"Hide Complete Tasks\" : \"Show All Tasks\"}</button>\n            </div>\n        </div>\n    )\n}\nexport default List;"]},"metadata":{},"sourceType":"module"}