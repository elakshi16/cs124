{"ast":null,"code":"var _jsxFileName = \"/Users/elakshishah/cs124/lab/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Tasks from \"./Tasks\";\nimport React, { useState } from \"react\";\nimport AddTask from \"./AddTask\";\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport { useCollection } from \"react-firebase-hooks/firestore\"; // const initialData = []\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n  authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n  projectId: \"hmc-cs124-fa21-labs\",\n  storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n  messagingSenderId: \"949410042946\",\n  appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction App() {\n  _s();\n\n  const name = \"elakshi16-tasks\";\n  const collection = db.collection(name);\n  const query = collection;\n  const [value, loading, error] = useCollection(collection);\n  const taskArray = [];\n\n  if (value) {\n    for (let i = 0; i < value.docs.length; i++) {\n      taskArray[i] = value.docs[i].data();\n    }\n  } // const [data, setData] = useState(initialData);\n\n\n  const [showCompleted, setShowCompleted] = useState(true);\n  let filteredList = data.filter(task => showCompleted || !task.completed);\n\n  function handleAddTask(taskName) {\n    // setData(data.concat([{id: generateUniqueID(), title: task}]));\n    const task = {\n      id: generateUniqueID(),\n      title: taskName,\n      priority: 0,\n      creationDate: Date.toLocaleString()\n    };\n    collection.doc(task.id).set(task);\n  }\n\n  function handleTaskFieldChange(taskId, field, newVal) {\n    // if (field === \"title\") {\n    //     setData(data.map(elem => elem.id === id ? {...elem, title: newVal} : elem));\n    //\n    // }\n    // if (field === \"completed\") {\n    //     setData(data.map(elem => elem.id === id ? {...elem, completed: newVal} : elem));\n    //\n    // }\n    const updateTask = {\n      id: taskId,\n      [field]: newVal\n    };\n    collection.doc(updateTask.id).update(updateTask);\n  }\n\n  function handleDeleteTask(deletedId) {\n    // setData(data.filter(task => task.id !== deletedId));\n    const taskDelete = taskArray.filter(task => task.id !== deletedId);\n    collection.doc(deletedId).delete(taskDelete);\n  }\n\n  function handleDeleteAll() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'App',\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Page is loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Checklist App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      className: 'addTask',\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      className: 'Tasks',\n      list: taskArray,\n      onTaskFieldChange: handleTaskFieldChange,\n      onDeleteTask: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'endButtons',\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'largeButton',\n        onClick: e => handleDeleteAll(),\n        children: \"Delete All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"largeButton\",\n        onClick: e => setShowCompleted(!showCompleted),\n        children: [\" \", showCompleted ? \"Hide Complete Tasks\" : \"Show All Tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"1eIY734xe6bJYXRBKQ94UtFtX6g=\", false, function () {\n  return [useCollection];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/elakshishah/cs124/lab/src/App.js"],"names":["Tasks","React","useState","AddTask","generateUniqueID","firebase","useCollection","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","db","firestore","App","name","collection","query","value","loading","error","taskArray","i","docs","length","data","showCompleted","setShowCompleted","filteredList","filter","task","completed","handleAddTask","taskName","id","title","priority","creationDate","Date","toLocaleString","doc","set","handleTaskFieldChange","taskId","field","newVal","updateTask","update","handleDeleteTask","deletedId","taskDelete","delete","handleDeleteAll","e"],"mappings":"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","sourcesContent":["import './App.css';\nimport Tasks from \"./Tasks\";\nimport React, {useState} from \"react\";\nimport AddTask from \"./AddTask\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// const initialData = []\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n    authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n    projectId: \"hmc-cs124-fa21-labs\",\n    storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n    messagingSenderId: \"949410042946\",\n    appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore()\n\nfunction App() {\n    const name = \"elakshi16-tasks\";\n    const collection = db.collection(name);\n    const query = collection;\n    const [value, loading, error] = useCollection(collection);\n\n    const taskArray = [];\n    if (value) {\n        for (let i=0; i<value.docs.length; i++) {\n            taskArray[i] = value.docs[i].data();\n        }\n    }\n\n    // const [data, setData] = useState(initialData);\n    const [showCompleted, setShowCompleted] = useState(true);\n    let filteredList = data.filter((task) => showCompleted || !task.completed);\n\n    function handleAddTask(taskName) {\n        // setData(data.concat([{id: generateUniqueID(), title: task}]));\n\n        const task = {id:generateUniqueID(), title:taskName, priority:0, creationDate:Date.toLocaleString()};\n        collection.doc(task.id).set(task);\n    }\n\n    function handleTaskFieldChange(taskId, field, newVal) {\n        // if (field === \"title\") {\n        //     setData(data.map(elem => elem.id === id ? {...elem, title: newVal} : elem));\n        //\n        // }\n        // if (field === \"completed\") {\n        //     setData(data.map(elem => elem.id === id ? {...elem, completed: newVal} : elem));\n        //\n        // }\n\n        const updateTask = {id:taskId, [field]:newVal };\n        collection.doc(updateTask.id).update(updateTask);\n    }\n\n    function handleDeleteTask(deletedId) {\n        // setData(data.filter(task => task.id !== deletedId));\n\n        const taskDelete = taskArray.filter(task => task.id !== deletedId);\n        collection.doc(deletedId).delete(taskDelete);\n    }\n\n    function handleDeleteAll() {\n        \n    }\n\n\n    return (<div className={'App'}>\n            {loading && <p>Page is loading</p>}\n\n            <h1>Checklist App</h1>\n            <AddTask className={'addTask'}\n                     onAddTask={handleAddTask}/>\n            <Tasks className={'Tasks'} list={taskArray} onTaskFieldChange={handleTaskFieldChange}\n                   onDeleteTask={handleDeleteTask}/>\n            <div className={'endButtons'}>\n                {/*follow directions for delete task but apply to all, don't filter anything out*/}\n                <button className={'largeButton'} onClick={e => handleDeleteAll()}>Delete All</button>\n                <button className=\"largeButton\"\n                        onClick={e => setShowCompleted(!showCompleted)}> {showCompleted ? \"Hide Complete Tasks\" : \"Show All Tasks\"}</button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}