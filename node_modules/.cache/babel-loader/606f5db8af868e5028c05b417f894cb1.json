{"ast":null,"code":"var _jsxFileName = \"/Users/catherinejang/cs124/lab/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Tasks from \"./Tasks\";\nimport React, { useState } from \"react\";\nimport AddTask from \"./AddTask\";\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialData = [{\n  title: \"do something\",\n  id: \"123\",\n  completed: true\n}, {\n  title: \"do dishes\",\n  id: \"124\",\n  completed: false\n}]; // some toggleCompleted (similar to handleFieldChanged in People)\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState(initialData);\n  const [showCompleted, setShowCompleted] = useState(true);\n  console.log(data);\n  console.log(\"show all tasks?\" + showCompleted);\n  let filteredList = data.filter(task => showCompleted || !task.completed);\n  console.log(filteredList);\n  console.log(\"in app\");\n\n  function handleTaskFieldChange(id, field, newVal) {\n    setData(data.map(elem => elem.id === id ? field = newVal : \"\"));\n  } // pass in all of data, but also pass in showCompleted (visibility) and tasks would filter things out\n  //     or app does filterning and only passes the filtered list into tasks\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'App',\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Checklist App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      className: 'addTask',\n      onAddTask: text => setData(data.concat([{\n        id: generateUniqueID(),\n        title: text\n      }]))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      className: 'Tasks',\n      list: filteredList,\n      onTaskFieldChange: handleTaskFieldChange,\n      onDeleteTask: deletedId => setData(data.filter(task => task.id !== deletedId))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'endButtons',\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'largeButton',\n        onClick: e => setData([]),\n        children: \"Delete All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"largeButton\",\n        onClick: e => setShowCompleted(!showCompleted),\n        children: [\" \", showCompleted ? \"Hide Complete Tasks\" : \"Show All Tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"YM4GUlPYBQTdstiiFnIiASNlqUQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/catherinejang/cs124/lab/src/App.js"],"names":["Tasks","React","useState","AddTask","generateUniqueID","initialData","title","id","completed","App","data","setData","showCompleted","setShowCompleted","console","log","filteredList","filter","task","handleTaskFieldChange","field","newVal","map","elem","text","concat","deletedId","e"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,gBAAR,QAA+B,8CAA/B;;AAEA,MAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,KAAK,EAAE,cADT;AAEEC,EAAAA,EAAE,EAAE,KAFN;AAGEC,EAAAA,SAAS,EAAE;AAHb,CADkB,EAMlB;AACEF,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,EAAE,EAAE,KAFN;AAGEC,EAAAA,SAAS,EAAE;AAHb,CANkB,CAApB,C,CAYC;;AACD,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACG,WAAD,CAAhC;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,IAAD,CAAlD;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBH,aAAhC;AACA,MAAII,YAAY,GAAGN,IAAI,CAACO,MAAL,CAAaC,IAAD,IAAUN,aAAa,IAAI,CAACM,IAAI,CAACV,SAA7C,CAAnB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AAEE,WAASI,qBAAT,CAA+BZ,EAA/B,EAAkCa,KAAlC,EAAwCC,MAAxC,EAA+C;AAC3CV,IAAAA,OAAO,CAACD,IAAI,CAACY,GAAL,CAASC,IAAI,IAAIA,IAAI,CAAChB,EAAL,KAAYA,EAAZ,GAAgBa,KAAK,GAAGC,MAAxB,GAAgC,EAAjD,CAAD,CAAP;AACH,GAXU,CAYf;AACA;;;AACE,sBAAQ;AAAK,IAAA,SAAS,EAAE,KAAhB;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,OAAD;AAAS,MAAA,SAAS,EAAE,SAApB;AAA+B,MAAA,SAAS,EAAGG,IAAD,IAAUb,OAAO,CAACD,IAAI,CAACe,MAAL,CAAY,CAAC;AAAClB,QAAAA,EAAE,EAAEH,gBAAgB,EAArB;AAAyBE,QAAAA,KAAK,EAAEkB;AAAhC,OAAD,CAAZ,CAAD;AAA3D;AAAA;AAAA;AAAA;AAAA,YAFA,eAGF,QAAC,KAAD;AAAO,MAAA,SAAS,EAAE,OAAlB;AAA2B,MAAA,IAAI,EAAER,YAAjC;AAA+C,MAAA,iBAAiB,EAAEG,qBAAlE;AAAyF,MAAA,YAAY,EAAKO,SAAD,IAAef,OAAO,CAACD,IAAI,CAACO,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACX,EAAL,KAAYmB,SAAhC,CAAD;AAA/H;AAAA;AAAA;AAAA;AAAA,YAHE,eAIA;AAAK,MAAA,SAAS,EAAE,YAAhB;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAE,aAAnB;AAAkC,QAAA,OAAO,EAAEC,CAAC,IAAIhB,OAAO,CAAC,EAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAEgB,CAAC,IAAId,gBAAgB,CAAC,CAACD,aAAF,CAA9D;AAAA,wBAAkFA,aAAa,GAAE,qBAAF,GAAyB,gBAAxH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAUD;;GAxBQH,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport Tasks from \"./Tasks\";\nimport React, {useState} from \"react\";\nimport AddTask from \"./AddTask\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nconst initialData = [\n  {\n    title: \"do something\",\n    id: \"123\",\n    completed: true\n  },\n  {\n    title: \"do dishes\",\n    id: \"124\",\n    completed: false\n  }\n]\n // some toggleCompleted (similar to handleFieldChanged in People)\nfunction App() {\n  const [data, setData] = useState(initialData);\n  const [showCompleted, setShowCompleted] = useState(true);\n  console.log(data);\n  console.log(\"show all tasks?\" + showCompleted)\n  let filteredList = data.filter((task) => showCompleted || !task.completed);\n  console.log(filteredList);\n  console.log(\"in app\");\n\n    function handleTaskFieldChange(id,field,newVal){\n        setData(data.map(elem => elem.id === id? field = newVal: \"\"))\n    }\n// pass in all of data, but also pass in showCompleted (visibility) and tasks would filter things out\n//     or app does filterning and only passes the filtered list into tasks\n  return (<div className={'App'}>\n          <h1>Checklist App</h1>\n          <AddTask className={'addTask'} onAddTask={(text) => setData(data.concat([{id: generateUniqueID(), title: text}]))}/>\n        <Tasks className={'Tasks'} list={filteredList} onTaskFieldChange={handleTaskFieldChange} onDeleteTask = {(deletedId) => setData(data.filter(task => task.id !== deletedId))}/>\n          <div className={'endButtons'}>\n              <button className={'largeButton'} onClick={e => setData([])}>Delete All</button>\n              <button className=\"largeButton\" onClick={e => setShowCompleted(!showCompleted)}> {showCompleted? \"Hide Complete Tasks\": \"Show All Tasks\"}</button>\n          </div>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}