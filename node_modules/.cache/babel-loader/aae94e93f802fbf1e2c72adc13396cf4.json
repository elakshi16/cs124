{"ast":null,"code":"var _jsxFileName = \"/Users/catherinejang/cs124/lab/src/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport Task from './Task';\nimport React, { useState } from \"react\";\nimport './Tasks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tasks(props) {\n  _s();\n\n  const [completedId, setCompletedId] = useState([]); // function switchComplete(id){\n  //     if (completedId.includes(id)){\n  //         setCompletedId(completedId.remove(id))\n  //     }\n  //     else{\n  //         setCompletedId(completedId.push(id))\n  //     }\n  // }\n  //\n  // function hideCompleted(){\n  //     props.list.map(elem => )\n  // }\n  // function toggleComplete(someElem){\n  //     someElem.completed = !someElem.completed;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'Tasks',\n    children: props.list.map(elem => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Task //toggleComplete={switchComplete(elem.id)}\n      , {\n        className: \"Task\",\n        elem: elem,\n        completed: elem.completed,\n        toggleComplete: elem1 => elem1.completed = !elem1.completed,\n        onDeleteTask: props.onDeleteTask,\n        taskText: elem.title,\n        ...elem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 33\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Tasks, \"QMJAXmHgTmz/r0QZPXvyg4ALh9c=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/catherinejang/cs124/lab/src/Tasks.js"],"names":["Task","React","useState","Tasks","props","completedId","setCompletedId","list","map","elem","completed","elem1","onDeleteTask","title"],"mappings":";;;AAAA,OAAOA,IAAP,MAAgB,QAAhB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,aAAP;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAClB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C,CADkB,CAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,sBAAQ;AAAK,IAAA,SAAS,EAAE,OAAhB;AAAA,cACHE,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAeC,IAAI,iBAAI;AAAA,6BACI,QAAC,IAAD,CAAM;AAAN;AACI,QAAA,SAAS,EAAC,MADd;AAEI,QAAA,IAAI,EAAEA,IAFV;AAGI,QAAA,SAAS,EAAEA,IAAI,CAACC,SAHpB;AAII,QAAA,cAAc,EAAEC,KAAK,IAAIA,KAAK,CAACD,SAAN,GAAkB,CAACC,KAAK,CAACD,SAJtD;AAKI,QAAA,YAAY,EAAEN,KAAK,CAACQ,YALxB;AAME,QAAA,QAAQ,EAAEH,IAAI,CAACI,KANjB;AAAA,WAM4BJ;AAN5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAAvB;AADG;AAAA;AAAA;AAAA;AAAA,UAAR;AAYH;;GAhCQN,K;;KAAAA,K;AAkCT,eAAeA,KAAf","sourcesContent":["import Task from'./Task';\nimport React, {useState} from \"react\";\nimport './Tasks.css';\n\nfunction Tasks(props) {\n    const [completedId, setCompletedId] = useState([]);\n\n    // function switchComplete(id){\n    //     if (completedId.includes(id)){\n    //         setCompletedId(completedId.remove(id))\n    //     }\n    //     else{\n    //         setCompletedId(completedId.push(id))\n    //     }\n    // }\n    //\n    // function hideCompleted(){\n    //     props.list.map(elem => )\n    // }\n    // function toggleComplete(someElem){\n    //     someElem.completed = !someElem.completed;\n    // }\n\n\n    return (<div className={'Tasks'}>\n        {props.list.map(elem => <div>\n                                    <Task //toggleComplete={switchComplete(elem.id)}\n                                        className='Task'\n                                        elem={elem}\n                                        completed={elem.completed}\n                                        toggleComplete={elem1 => elem1.completed = !elem1.completed}\n                                        onDeleteTask={props.onDeleteTask}\n                                      taskText={elem.title} {...elem}/>\n                                    {/*<div className=\"editButton\"><button onClick={e => toggleEdit()}>Edit</button></div>*/}\n                                </div>)}\n    </div>);\n}\n\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}