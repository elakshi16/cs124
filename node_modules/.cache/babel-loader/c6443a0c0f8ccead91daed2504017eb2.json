{"ast":null,"code":"import _objectSpread from\"/Users/elakshishah/cs124/lab/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/elakshishah/cs124/lab/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import Tasks from\"./Tasks\";import React,{useState}from\"react\";import AddTask from\"./AddTask\";import{generateUniqueID}from\"web-vitals/dist/modules/lib/generateUniqueID\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initialData=[];function App(){var _useState=useState(initialData),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),showCompleted=_useState4[0],setShowCompleted=_useState4[1];var filteredList=data.filter(function(task){return showCompleted||!task.completed;});function handleTaskFieldChange(id,field,newVal){if(field===\"title\"){setData(data.map(function(elem){return elem.id===id?_objectSpread(_objectSpread({},elem),{},{title:newVal}):elem;}));}if(field===\"completed\"){setData(data.map(function(elem){return elem.id===id?_objectSpread(_objectSpread({},elem),{},{completed:newVal}):elem;}));}}return/*#__PURE__*/_jsxs(\"div\",{className:'App',children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Checklist App\"}),/*#__PURE__*/_jsx(AddTask,{className:'addTask',onAddTask:function onAddTask(text){return setData(data.concat([{id:generateUniqueID(),title:text}]));}}),/*#__PURE__*/_jsx(Tasks,{className:'Tasks',list:filteredList,onTaskFieldChange:handleTaskFieldChange,onDeleteTask:function onDeleteTask(deletedId){return setData(data.filter(function(task){return task.id!==deletedId;}));}}),/*#__PURE__*/_jsxs(\"div\",{className:'endButtons',children:[/*#__PURE__*/_jsx(\"button\",{className:'largeButton',onClick:function onClick(e){return setData([]);},children:\"Delete All\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"largeButton\",onClick:function onClick(e){return setShowCompleted(!showCompleted);},children:[\" \",showCompleted?\"Hide Complete Tasks\":\"Show All Tasks\"]})]})]});}export default App;","map":{"version":3,"sources":["/Users/elakshishah/cs124/lab/src/App.js"],"names":["Tasks","React","useState","AddTask","generateUniqueID","initialData","App","data","setData","showCompleted","setShowCompleted","filteredList","filter","task","completed","handleTaskFieldChange","id","field","newVal","map","elem","title","text","concat","deletedId","e"],"mappings":"6NAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAAQC,gBAAR,KAA+B,8CAA/B,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,EAApB,CAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAwBJ,QAAQ,CAACG,WAAD,CAAhC,wCAAOE,IAAP,eAAaC,OAAb,eACA,eAA0CN,QAAQ,CAAC,IAAD,CAAlD,yCAAOO,aAAP,eAAsBC,gBAAtB,eACA,GAAIC,CAAAA,YAAY,CAAGJ,IAAI,CAACK,MAAL,CAAY,SAACC,IAAD,QAAUJ,CAAAA,aAAa,EAAI,CAACI,IAAI,CAACC,SAAjC,EAAZ,CAAnB,CAEA,QAASC,CAAAA,qBAAT,CAA+BC,EAA/B,CAAkCC,KAAlC,CAAwCC,MAAxC,CAA+C,CAC3C,GAAID,KAAK,GAAK,OAAd,CAAsB,CAClBT,OAAO,CAACD,IAAI,CAACY,GAAL,CAAS,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACJ,EAAL,GAAYA,EAAZ,gCAAoBI,IAApB,MAA0BC,KAAK,CAAEH,MAAjC,GAA0CE,IAA9C,EAAb,CAAD,CAAP,CAEH,CACD,GAAIH,KAAK,GAAK,WAAd,CAA0B,CACtBT,OAAO,CAACD,IAAI,CAACY,GAAL,CAAS,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACJ,EAAL,GAAYA,EAAZ,gCAAoBI,IAApB,MAA0BN,SAAS,CAAEI,MAArC,GAA8CE,IAAlD,EAAb,CAAD,CAAP,CAEH,CACJ,CAED,mBAAQ,aAAK,SAAS,CAAE,KAAhB,wBACA,qCADA,cAEA,KAAC,OAAD,EAAS,SAAS,CAAE,SAApB,CAA+B,SAAS,CAAE,mBAACE,IAAD,QAAUd,CAAAA,OAAO,CAACD,IAAI,CAACgB,MAAL,CAAY,CAAC,CAACP,EAAE,CAAEZ,gBAAgB,EAArB,CAAyBiB,KAAK,CAAEC,IAAhC,CAAD,CAAZ,CAAD,CAAjB,EAA1C,EAFA,cAGF,KAAC,KAAD,EAAO,SAAS,CAAE,OAAlB,CAA2B,IAAI,CAAEX,YAAjC,CAA+C,iBAAiB,CAAEI,qBAAlE,CAAyF,YAAY,CAAI,sBAACS,SAAD,QAAehB,CAAAA,OAAO,CAACD,IAAI,CAACK,MAAL,CAAY,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACG,EAAL,GAAYQ,SAAhB,EAAhB,CAAD,CAAtB,EAAzG,EAHE,cAIA,aAAK,SAAS,CAAE,YAAhB,wBACI,eAAQ,SAAS,CAAE,aAAnB,CAAkC,OAAO,CAAE,iBAAAC,CAAC,QAAIjB,CAAAA,OAAO,CAAC,EAAD,CAAX,EAA5C,wBADJ,cAEI,gBAAQ,SAAS,CAAC,aAAlB,CAAgC,OAAO,CAAE,iBAAAiB,CAAC,QAAIf,CAAAA,gBAAgB,CAAC,CAACD,aAAF,CAApB,EAA1C,eAAkFA,aAAa,CAAE,qBAAF,CAAyB,gBAAxH,GAFJ,GAJA,GAAR,CAUD,CAED,cAAeH,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport Tasks from \"./Tasks\";\nimport React, {useState} from \"react\";\nimport AddTask from \"./AddTask\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nconst initialData = []\n\nfunction App() {\n  const [data, setData] = useState(initialData);\n  const [showCompleted, setShowCompleted] = useState(true);\n  let filteredList = data.filter((task) => showCompleted || !task.completed);\n\n  function handleTaskFieldChange(id,field,newVal){\n      if (field === \"title\"){\n          setData(data.map(elem => elem.id === id? {...elem, title: newVal}: elem))\n\n      }\n      if (field === \"completed\"){\n          setData(data.map(elem => elem.id === id? {...elem, completed: newVal}: elem))\n\n      }\n  }\n\n  return (<div className={'App'}>\n          <h1>Checklist App</h1>\n          <AddTask className={'addTask'} onAddTask={(text) => setData(data.concat([{id: generateUniqueID(), title: text}]))}/>\n        <Tasks className={'Tasks'} list={filteredList} onTaskFieldChange={handleTaskFieldChange} onDeleteTask = {(deletedId) => setData(data.filter(task => task.id !== deletedId))}/>\n          <div className={'endButtons'}>\n              <button className={'largeButton'} onClick={e => setData([])}>Delete All</button>\n              <button className=\"largeButton\" onClick={e => setShowCompleted(!showCompleted)}> {showCompleted? \"Hide Complete Tasks\": \"Show All Tasks\"}</button>\n          </div>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}