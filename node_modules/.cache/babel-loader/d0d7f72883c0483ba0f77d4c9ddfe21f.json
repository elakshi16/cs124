{"ast":null,"code":"var _jsxFileName = \"/Users/catherinejang/cs124/lab/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Sorting from \"./Sorting\";\nimport Tasks from \"./Tasks\";\nimport React, { useState } from \"react\";\nimport AddTask from \"./AddTask\";\nimport List from \"./List\";\nimport Lists from \"./Lists\";\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport { useCollection } from \"react-firebase-hooks/firestore\"; // const initialData = []\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDeSrL-YstSATx0OqeATHzUBttu5Qxz9tM\",\n  authDomain: \"task-app-34b9f.firebaseapp.com\",\n  projectId: \"task-app-34b9f\",\n  storageBucket: \"task-app-34b9f.appspot.com\",\n  messagingSenderId: \"982606058122\",\n  appId: \"1:982606058122:web:ffce85d25a8dfd5c38d373\",\n  measurementId: \"G-039RP6Z1B1\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\n\nfunction App() {\n  _s();\n\n  const name = \"Tasks\";\n  const query = db.collection(name);\n  const [field, setField] = useState(\"title\");\n  const [direction, setDirection] = useState(\"asc\");\n  const [value, loading, error] = useCollection(query.orderBy(field, direction));\n  const taskArray = [];\n\n  if (value) {\n    for (let i = 0; i < value.docs.length; i++) {\n      taskArray[i] = value.docs[i].data();\n    }\n  }\n\n  const [showCompleted, setShowCompleted] = useState(true);\n  const filteredList = taskArray.filter(task => showCompleted || !task.completed);\n\n  function handleAddTask(taskName) {\n    const task = {\n      id: generateUniqueID(),\n      title: taskName,\n      priority: 0,\n      creationDate: Date.toLocaleString()\n    };\n    query.doc(task.id).set(task);\n  }\n\n  function handleTaskFieldChange(taskId, field, newVal) {\n    const updateTask = {\n      [field]: newVal\n    };\n    console.log(field, newVal);\n    query.doc(taskId).update(updateTask);\n  }\n\n  function handleDeleteTasks(deletedIds) {\n    for (let i = 0; i < deletedIds.length; i++) {\n      query.doc(deletedIds[i]).delete();\n    }\n  }\n\n  function sortBy(field, direction) {\n    setField(field);\n    setDirection(direction);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'App',\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Page is loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Checklist App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      className: 'addTask',\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sorting, {\n      classname: \"sort\",\n      onSelection: sortBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      className: 'Tasks',\n      list: filteredList,\n      onTaskFieldChange: handleTaskFieldChange,\n      onDeleteTask: handleDeleteTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'endButtons',\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'largeButton',\n        onClick: e => handleDeleteTasks(filteredList.map(task => task.id)),\n        children: \"Delete All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"largeButton\",\n        onClick: e => setShowCompleted(!showCompleted),\n        children: [\" \", showCompleted ? \"Hide Complete Tasks\" : \"Show All Tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Lists, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"WziFGQlwdfitaiJhK1/4A8a8Kd8=\", false, function () {\n  return [useCollection];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/catherinejang/cs124/lab/src/App.js"],"names":["Sorting","Tasks","React","useState","AddTask","List","Lists","generateUniqueID","firebase","useCollection","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","db","firestore","App","name","query","collection","field","setField","direction","setDirection","value","loading","error","orderBy","taskArray","i","docs","length","data","showCompleted","setShowCompleted","filteredList","filter","task","completed","handleAddTask","taskName","id","title","priority","creationDate","Date","toLocaleString","doc","set","handleTaskFieldChange","taskId","newVal","updateTask","console","log","update","handleDeleteTasks","deletedIds","delete","sortBy","e","map"],"mappings":"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","sourcesContent":["import './App.css';\nimport Sorting from \"./Sorting\";\nimport Tasks from \"./Tasks\";\nimport React, {useState} from \"react\";\nimport AddTask from \"./AddTask\";\nimport List from \"./List\";\nimport Lists from \"./Lists\"\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// const initialData = []\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDeSrL-YstSATx0OqeATHzUBttu5Qxz9tM\",\n    authDomain: \"task-app-34b9f.firebaseapp.com\",\n    projectId: \"task-app-34b9f\",\n    storageBucket: \"task-app-34b9f.appspot.com\",\n    messagingSenderId: \"982606058122\",\n    appId: \"1:982606058122:web:ffce85d25a8dfd5c38d373\",\n    measurementId: \"G-039RP6Z1B1\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore()\n\nfunction App() {\n    const name = \"Tasks\";\n    const query = db.collection(name);\n\n    const [field, setField] = useState(\"title\")\n    const [direction, setDirection] = useState(\"asc\")\n    const [value, loading, error] = useCollection(query.orderBy(field, direction));\n\n    const taskArray = [];\n\n    if (value) {\n        for (let i=0; i<value.docs.length; i++) {\n            taskArray[i] = value.docs[i].data();\n        }\n    }\n\n    const [showCompleted, setShowCompleted] = useState(true);\n    const filteredList = taskArray.filter((task) => showCompleted || !task.completed);\n\n    function handleAddTask(taskName) {\n        const task = {id:generateUniqueID(), title:taskName, priority:0, creationDate:Date.toLocaleString()};\n        query.doc(task.id).set(task);\n    }\n\n    function handleTaskFieldChange(taskId, field, newVal) {\n        const updateTask = {[field]:newVal };\n        console.log(field, newVal);\n        query.doc(taskId).update(updateTask);\n    }\n\n    function handleDeleteTasks(deletedIds) {\n        for (let i=0; i < deletedIds.length; i++){\n            query.doc(deletedIds[i]).delete();\n        }\n    }\n\n    function sortBy(field, direction) {\n        setField(field)\n        setDirection(direction)\n    }\n\n\n\n    return (<div className={'App'}>\n            {loading && <p>Page is loading</p>}\n\n            <h1>Checklist App</h1>\n            <AddTask className={'addTask'}\n                     onAddTask={handleAddTask}/>\n            <Sorting classname={\"sort\"} onSelection={sortBy}/>\n            <Tasks className={'Tasks'} list={filteredList} onTaskFieldChange={handleTaskFieldChange}\n                   onDeleteTask={handleDeleteTasks}/>\n            <div className={'endButtons'}>\n                {/*follow directions for delete task but apply to all, don't filter anything out*/}\n                <button className={'largeButton'} onClick={e => handleDeleteTasks(filteredList.map((task) => task.id))}>Delete All</button>\n                <button className=\"largeButton\"\n                        onClick={e => setShowCompleted(!showCompleted)}> {showCompleted ? \"Hide Complete Tasks\" : \"Show All Tasks\"}</button>\n            </div>\n            <div>\n                <button>Add List</button>\n                <List/>\n                <Lists/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}