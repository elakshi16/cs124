{"ast":null,"code":"var _jsxFileName = \"/Users/catherinejang/cs124/lab/src/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Sorting from \"./Sorting\";\nimport Tasks from \"./Tasks\";\nimport AddTask from \"./AddTask\";\nimport './List.css';\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List(props) {\n  _s();\n\n  const name = \"Lists\";\n  const query = props.database.collection(name);\n  const [field, setField] = useState(\"creationDate\");\n  const [direction, setDirection] = useState(\"desc\");\n  const [value, loading, error] = useCollection(query.orderBy(field, direction));\n  const taskArray = [];\n\n  if (value) {\n    for (let i = 0; i < value.docs.length; i++) {\n      taskArray[i] = value.docs[i].data();\n    }\n  }\n\n  const [showCompleted, setShowCompleted] = useState(true);\n  const filteredList = taskArray.filter(task => showCompleted || !task.completed);\n\n  function handleAddTask(taskName) {\n    const task = {\n      id: generateUniqueID(),\n      title: taskName,\n      priority: 0,\n      creationDate: Date.toLocaleString()\n    };\n    query.doc(task.id).set(task);\n  }\n\n  function handleTaskFieldChange(taskId, field, newVal) {\n    const updateTask = {\n      [field]: newVal\n    };\n    console.log(field, newVal);\n    query.doc(taskId).update(updateTask);\n  }\n\n  function handleDeleteTasks(deletedIds) {\n    for (let i = 0; i < deletedIds.length; i++) {\n      query.doc(deletedIds[i]).delete();\n    }\n  }\n\n  function sortBy(field, direction) {\n    setField(field);\n    setDirection(direction);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'App',\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Page is loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      className: 'addTask',\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sorting, {\n      classname: \"sort\",\n      onSelection: sortBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      className: 'Tasks',\n      list: filteredList,\n      onTaskFieldChange: handleTaskFieldChange,\n      onDeleteTask: handleDeleteTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'endButtons',\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'largeButton',\n        onClick: e => handleDeleteTasks(filteredList.map(task => task.id)),\n        children: \"Delete All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"largeButton\",\n        onClick: e => setShowCompleted(!showCompleted),\n        children: [\" \", showCompleted ? \"Hide Complete Tasks\" : \"Show All Tasks\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }, this);\n}\n\n_s(List, \"pNcyGFrAqY0MiWyJ90Ex0P+h2DI=\", false, function () {\n  return [useCollection];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/catherinejang/cs124/lab/src/List.js"],"names":["React","useState","Sorting","Tasks","AddTask","generateUniqueID","useCollection","List","props","name","query","database","collection","field","setField","direction","setDirection","value","loading","error","orderBy","taskArray","i","docs","length","data","showCompleted","setShowCompleted","filteredList","filter","task","completed","handleAddTask","taskName","id","title","priority","creationDate","Date","toLocaleString","doc","set","handleTaskFieldChange","taskId","newVal","updateTask","console","log","update","handleDeleteTasks","deletedIds","delete","sortBy","e","map"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport Sorting from \"./Sorting\";\nimport Tasks from \"./Tasks\";\nimport AddTask from \"./AddTask\";\n\nimport './List.css';\n\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\nfunction List(props) {\n    const name = \"Lists\";\n    const query = props.database.collection(name);\n\n    const [field, setField] = useState(\"creationDate\")\n    const [direction, setDirection] = useState(\"desc\")\n    const [value, loading, error] = useCollection(query.orderBy(field, direction));\n\n    const taskArray = [];\n\n    if (value) {\n        for (let i=0; i<value.docs.length; i++) {\n            taskArray[i] = value.docs[i].data();\n        }\n    }\n\n    const [showCompleted, setShowCompleted] = useState(true);\n    const filteredList = taskArray.filter((task) => showCompleted || !task.completed);\n\n    function handleAddTask(taskName) {\n        const task = {id:generateUniqueID(), title:taskName, priority:0, creationDate:Date.toLocaleString()};\n        query.doc(task.id).set(task);\n    }\n\n    function handleTaskFieldChange(taskId, field, newVal) {\n        const updateTask = {[field]:newVal };\n        console.log(field, newVal);\n        query.doc(taskId).update(updateTask);\n    }\n\n    function handleDeleteTasks(deletedIds) {\n        for (let i=0; i < deletedIds.length; i++){\n            query.doc(deletedIds[i]).delete();\n        }\n    }\n\n    function sortBy(field, direction) {\n        setField(field)\n        setDirection(direction)\n    }\n\n\n\n    return (<div className={'App'}>\n            {loading && <p>Page is loading</p>}\n\n            <AddTask className={'addTask'}\n                     onAddTask={handleAddTask}/>\n            <Sorting classname={\"sort\"} onSelection={sortBy}/>\n            <Tasks className={'Tasks'} list={filteredList} onTaskFieldChange={handleTaskFieldChange}\n                   onDeleteTask={handleDeleteTasks}/>\n            <div className={'endButtons'}>\n                {/*follow directions for delete task but apply to all, don't filter anything out*/}\n                <button className={'largeButton'} onClick={e => handleDeleteTasks(filteredList.map((task) => task.id))}>Delete All</button>\n                <button className=\"largeButton\"\n                        onClick={e => setShowCompleted(!showCompleted)}> {showCompleted ? \"Hide Complete Tasks\" : \"Show All Tasks\"}</button>\n            </div>\n        </div>\n    );\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}