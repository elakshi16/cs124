[{"/Users/catherinejang/cs124/lab/src/index.js":"1","/Users/catherinejang/cs124/lab/src/App.js":"2","/Users/catherinejang/cs124/lab/src/reportWebVitals.js":"3","/Users/catherinejang/cs124/lab/src/Tasks.js":"4","/Users/catherinejang/cs124/lab/src/AddTask.js":"5","/Users/catherinejang/cs124/lab/src/Task.js":"6"},{"size":500,"mtime":1634018526190,"results":"7","hashOfConfig":"8"},{"size":542,"mtime":1634046949135,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1634018526191,"results":"10","hashOfConfig":"8"},{"size":208,"mtime":1634047108154,"results":"11","hashOfConfig":"8"},{"size":475,"mtime":1634033968300,"results":"12","hashOfConfig":"8"},{"size":355,"mtime":1634047108149,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1suu7d1",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/catherinejang/cs124/lab/src/index.js",[],["28","29"],"/Users/catherinejang/cs124/lab/src/App.js",[],"/Users/catherinejang/cs124/lab/src/reportWebVitals.js",[],"/Users/catherinejang/cs124/lab/src/Tasks.js",[],"/Users/catherinejang/cs124/lab/src/AddTask.js",["30","31","32"],"import React, {useState} from \"react\";\n\nfunction generateId(currentId) {\n    return currentId ++;\n}\n\nfunction AddTask(props) {\n    const [text, setText] = useState(null);\n    const [id, setId] = useState(0);\n    return <div>\n        <form>\n            <input type=\"text\" id ={id} value={text} placeholder=\"Enter new task here\"/>\n            <input type=\"submit\" value = \"+\" onClick={e => props.onAddTask(({text},{id}))}/>\n        </form>\n    </div>\n}\n\nexport default AddTask;","/Users/catherinejang/cs124/lab/src/Task.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":3,"column":10,"nodeType":"39","messageId":"40","endLine":3,"endColumn":20},{"ruleId":"37","severity":1,"message":"41","line":8,"column":18,"nodeType":"39","messageId":"40","endLine":8,"endColumn":25},{"ruleId":"37","severity":1,"message":"42","line":9,"column":16,"nodeType":"39","messageId":"40","endLine":9,"endColumn":21},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'generateId' is defined but never used.","Identifier","unusedVar","'setText' is assigned a value but never used.","'setId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]