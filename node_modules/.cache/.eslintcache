[{"/Users/catherinejang/cs124/lab/src/index.js":"1","/Users/catherinejang/cs124/lab/src/reportWebVitals.js":"2","/Users/catherinejang/cs124/lab/src/App.js":"3","/Users/catherinejang/cs124/lab/src/Tasks.js":"4","/Users/catherinejang/cs124/lab/src/AddTask.js":"5","/Users/catherinejang/cs124/lab/src/Task.js":"6","/Users/catherinejang/Desktop/cs124/lab/src/index.js":"7","/Users/catherinejang/Desktop/cs124/lab/src/reportWebVitals.js":"8","/Users/catherinejang/Desktop/cs124/lab/src/App.js":"9","/Users/catherinejang/Desktop/cs124/lab/src/AddTask.js":"10","/Users/catherinejang/Desktop/cs124/lab/src/Tasks.js":"11","/Users/catherinejang/Desktop/cs124/lab/src/Task.js":"12"},{"size":502,"mtime":1635297176353,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1634018526191,"results":"15","hashOfConfig":"14"},{"size":3240,"mtime":1636000641866,"results":"16","hashOfConfig":"14"},{"size":702,"mtime":1635988153402,"results":"17","hashOfConfig":"14"},{"size":637,"mtime":1635297176350,"results":"18","hashOfConfig":"14"},{"size":597,"mtime":1636000038145,"results":"19","hashOfConfig":"14"},{"size":502,"mtime":1636002574708,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1636002574709,"results":"22","hashOfConfig":"21"},{"size":3240,"mtime":1636002574707,"results":"23","hashOfConfig":"21"},{"size":637,"mtime":1636002574707,"results":"24","hashOfConfig":"21"},{"size":702,"mtime":1636002574708,"results":"25","hashOfConfig":"21"},{"size":597,"mtime":1636002574708,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"1w9p9k3",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"1fgk7zi",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/catherinejang/cs124/lab/src/index.js",["55"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["56","57"],"/Users/catherinejang/cs124/lab/src/reportWebVitals.js",[],"/Users/catherinejang/cs124/lab/src/App.js",["58","59"],"/Users/catherinejang/cs124/lab/src/Tasks.js",["60","61"],"/Users/catherinejang/cs124/lab/src/AddTask.js",[],"/Users/catherinejang/cs124/lab/src/Task.js",[],"/Users/catherinejang/Desktop/cs124/lab/src/index.js",["62"],"/Users/catherinejang/Desktop/cs124/lab/src/reportWebVitals.js",[],"/Users/catherinejang/Desktop/cs124/lab/src/App.js",["63","64"],"import './App.css';\nimport Tasks from \"./Tasks\";\nimport React, {useState} from \"react\";\nimport AddTask from \"./AddTask\";\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport firebase from \"firebase/compat\";\nimport {useCollection} from \"react-firebase-hooks/firestore\";\n\n// const initialData = []\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCd9qqxvMpEKpBzwfWcc2tlRFa6ICaLH_s\",\n    authDomain: \"hmc-cs124-fa21-labs.firebaseapp.com\",\n    projectId: \"hmc-cs124-fa21-labs\",\n    storageBucket: \"hmc-cs124-fa21-labs.appspot.com\",\n    messagingSenderId: \"949410042946\",\n    appId: \"1:949410042946:web:0113b139a7e3cd1cc709db\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore()\n\nfunction App() {\n    const name = \"elakshi16-tasks\";\n    const collection = db.collection(name);\n    const query = collection;\n    const [value, loading, error] = useCollection(collection);\n\n    const taskArray = [];\n    // const showCompleted = true;\n    if (value) {\n        for (let i=0; i<value.docs.length; i++) {\n            taskArray[i] = value.docs[i].data();\n        }\n    }\n\n    // const [data, setData] = useState(initialData);\n    const [showCompleted, setShowCompleted] = useState(true);\n    const filteredList = taskArray.filter((task) => showCompleted || !task.completed);\n\n    function handleAddTask(taskName) {\n        // setData(data.concat([{id: generateUniqueID(), title: task}]));\n\n        const task = {id:generateUniqueID(), title:taskName, priority:0, creationDate:Date.toLocaleString()};\n        collection.doc(task.id).set(task);\n    }\n\n    function handleTaskFieldChange(taskId, field, newVal) {\n        // if (field === \"title\") {\n        //     setData(data.map(elem => elem.id === id ? {...elem, title: newVal} : elem));\n        //\n        // }\n        // if (field === \"completed\") {\n        //     setData(data.map(elem => elem.id === id ? {...elem, completed: newVal} : elem));\n        //\n        // }\n\n        const updateTask = {[field]:newVal };\n        console.log(field, newVal);\n        collection.doc(taskId).update(updateTask);\n    }\n\n    function handleDeleteTasks(deletedIds) {\n        // setData(data.filter(task => task.id !== deletedId));\n        for (let i=0; i < filteredList.length; i++){\n            collection.doc(deletedIds[i]).delete();\n        }\n    }\n\n\n\n\n    return (<div className={'App'}>\n            {loading && <p>Page is loading</p>}\n\n            <h1>Checklist App</h1>\n            <AddTask className={'addTask'}\n                     onAddTask={handleAddTask}/>\n            <Tasks className={'Tasks'} list={filteredList} onTaskFieldChange={handleTaskFieldChange}\n                   onDeleteTask={handleDeleteTasks}/>\n            <div className={'endButtons'}>\n                {/*follow directions for delete task but apply to all, don't filter anything out*/}\n                <button className={'largeButton'} onClick={e => handleDeleteTasks(filteredList.map((task) => task.id))}>Delete All</button>\n                <button className=\"largeButton\"\n                        onClick={e => setShowCompleted(!showCompleted)}> {showCompleted ? \"Hide Complete Tasks\" : \"Show All Tasks\"}</button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/catherinejang/Desktop/cs124/lab/src/AddTask.js",[],"/Users/catherinejang/Desktop/cs124/lab/src/Tasks.js",["65","66"],"import Task from'./Task';\nimport React, {useState} from \"react\";\nimport './Tasks.css';\n\nfunction Tasks(props) {\n    const [selectedId, setSelectedId] = useState(null);\n    return (<div className={'Tasks'}>\n        {props.list.map(elem => <div>\n                                    <Task\n                                        id = {elem.id}\n                                        onTaskFieldChange={props.onTaskFieldChange}\n                                        className='Task'\n                                        onDeleteTask={props.onDeleteTask}\n                                      text={elem.title} {...elem}/>\n                                </div>)}\n    </div>);\n}\n\nexport default Tasks;","/Users/catherinejang/Desktop/cs124/lab/src/Task.js",[],{"ruleId":"67","severity":1,"message":"68","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":23},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"67","severity":1,"message":"75","line":25,"column":11,"nodeType":"69","messageId":"70","endLine":25,"endColumn":16},{"ruleId":"67","severity":1,"message":"76","line":26,"column":28,"nodeType":"69","messageId":"70","endLine":26,"endColumn":33},{"ruleId":"67","severity":1,"message":"77","line":6,"column":12,"nodeType":"69","messageId":"70","endLine":6,"endColumn":22},{"ruleId":"67","severity":1,"message":"78","line":6,"column":24,"nodeType":"69","messageId":"70","endLine":6,"endColumn":37},{"ruleId":"67","severity":1,"message":"68","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":23},{"ruleId":"67","severity":1,"message":"75","line":25,"column":11,"nodeType":"69","messageId":"70","endLine":25,"endColumn":16},{"ruleId":"67","severity":1,"message":"76","line":26,"column":28,"nodeType":"69","messageId":"70","endLine":26,"endColumn":33},{"ruleId":"67","severity":1,"message":"77","line":6,"column":12,"nodeType":"69","messageId":"70","endLine":6,"endColumn":22},{"ruleId":"67","severity":1,"message":"78","line":6,"column":24,"nodeType":"69","messageId":"70","endLine":6,"endColumn":37},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"'query' is assigned a value but never used.","'error' is assigned a value but never used.","'selectedId' is assigned a value but never used.","'setSelectedId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]